package d.d;

import javax.swing.JOptionPane;
import java.lang.NumberFormatException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Joshua
 */
public class Window extends javax.swing.JFrame {
    public ChallengeRating c = new ChallengeRating();
    String[] hoard;
    Treasure t;
    int[] coinage;
    Rolls roll = new Rolls();
    String race="Dwarf";
    String charClass = "Barbarian";
    String align = "Lawful Good";
    String background = "Acolyte";
    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        raceButtonGroup = new javax.swing.ButtonGroup();
        classButtonGroup = new javax.swing.ButtonGroup();
        alignmentButtonGroup = new javax.swing.ButtonGroup();
        backgroundButtonGroup = new javax.swing.ButtonGroup();
        mainTabbedPane = new javax.swing.JTabbedPane();
        combatOrderPanel = new javax.swing.JPanel();
        treasurePanel = new javax.swing.JPanel();
        chalRatingComboBox = new javax.swing.JComboBox<>();
        chalRatingLabel = new javax.swing.JLabel();
        individualCoinageLabel = new javax.swing.JLabel();
        individualCopperTextField = new javax.swing.JTextField();
        hoardCoinageLabel = new javax.swing.JLabel();
        individualCopperLabal = new javax.swing.JLabel();
        individualSilverTextField = new javax.swing.JTextField();
        individualSilverLabel = new javax.swing.JLabel();
        individualGoldTextField = new javax.swing.JTextField();
        individualGoldLabel = new javax.swing.JLabel();
        individualPlatinumTextField = new javax.swing.JTextField();
        indivivualPlatinumLabel = new javax.swing.JLabel();
        hoardCopperTextField = new javax.swing.JTextField();
        hoardCopperLabel = new javax.swing.JLabel();
        hoardSilverTextField = new javax.swing.JTextField();
        hoardSilverLabel = new javax.swing.JLabel();
        hoardGoldTextField = new javax.swing.JTextField();
        hoardGoldLabel = new javax.swing.JLabel();
        hoardPlatinumTextField = new javax.swing.JTextField();
        hoardPlatinumLabel = new javax.swing.JLabel();
        individualCoinageRollButton = new javax.swing.JButton();
        hoardRollButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        artTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        gemstonesTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        magicItemsTextArea = new javax.swing.JTextArea();
        artLabel = new javax.swing.JLabel();
        gemstonesLabel = new javax.swing.JLabel();
        magicItemsLabel = new javax.swing.JLabel();
        treasureClearButton = new javax.swing.JButton();
        rollsPanel = new javax.swing.JPanel();
        d4Button = new javax.swing.JButton();
        d6Button = new javax.swing.JButton();
        d8Button = new javax.swing.JButton();
        d10Button = new javax.swing.JButton();
        d12Button = new javax.swing.JButton();
        d20Button = new javax.swing.JButton();
        d100Button = new javax.swing.JButton();
        d4TextField = new javax.swing.JTextField();
        d6Textfield = new javax.swing.JTextField();
        d8TextField = new javax.swing.JTextField();
        d10TextField = new javax.swing.JTextField();
        d12TextField = new javax.swing.JTextField();
        d20TextField = new javax.swing.JTextField();
        d100TextField = new javax.swing.JTextField();
        customInputField = new javax.swing.JTextField();
        customRollButton = new javax.swing.JButton();
        customOutputField = new javax.swing.JTextField();
        rollsClearButton = new javax.swing.JButton();
        characterCreationPanel = new javax.swing.JPanel();
        characterNameTextField = new javax.swing.JTextField();
        characterNameLabel = new javax.swing.JLabel();
        dwarfButton = new javax.swing.JRadioButton();
        elfButton = new javax.swing.JRadioButton();
        halflingButton = new javax.swing.JRadioButton();
        humanButton = new javax.swing.JRadioButton();
        dragonbornButton = new javax.swing.JRadioButton();
        gnomeButton = new javax.swing.JRadioButton();
        halfElfButton = new javax.swing.JRadioButton();
        halfOrcButton = new javax.swing.JRadioButton();
        tieflingButton = new javax.swing.JRadioButton();
        raceLabel = new javax.swing.JLabel();
        clericButton = new javax.swing.JRadioButton();
        bardButton = new javax.swing.JRadioButton();
        barbarianButton = new javax.swing.JRadioButton();
        monkButton = new javax.swing.JRadioButton();
        fighterButton = new javax.swing.JRadioButton();
        druidButton = new javax.swing.JRadioButton();
        paladinButton = new javax.swing.JRadioButton();
        wizardButton = new javax.swing.JRadioButton();
        warlockButton = new javax.swing.JRadioButton();
        sorcererButton = new javax.swing.JRadioButton();
        rogueButton = new javax.swing.JRadioButton();
        rangerButton = new javax.swing.JRadioButton();
        classLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        alignmentLabal = new javax.swing.JLabel();
        lawfulGoodButton = new javax.swing.JRadioButton();
        lawfulNeutralButton = new javax.swing.JRadioButton();
        lawfulEvilButton = new javax.swing.JRadioButton();
        neutralGoodButton = new javax.swing.JRadioButton();
        neutralButton = new javax.swing.JRadioButton();
        neutralEvilButton = new javax.swing.JRadioButton();
        chaoticGoodButton = new javax.swing.JRadioButton();
        chaoticNeutralButton = new javax.swing.JRadioButton();
        chaoticEvilButton = new javax.swing.JRadioButton();
        backgroundLabel = new javax.swing.JLabel();
        acolyteButton = new javax.swing.JRadioButton();
        charlatanButton = new javax.swing.JRadioButton();
        criminalButton = new javax.swing.JRadioButton();
        entertainerButton = new javax.swing.JRadioButton();
        folkHeroButton = new javax.swing.JRadioButton();
        guildArtisanButton = new javax.swing.JRadioButton();
        hermitButton = new javax.swing.JRadioButton();
        nobleButton = new javax.swing.JRadioButton();
        outlanderButton = new javax.swing.JRadioButton();
        sageButton = new javax.swing.JRadioButton();
        sailorButton = new javax.swing.JRadioButton();
        soldierButton = new javax.swing.JRadioButton();
        urchinButton = new javax.swing.JRadioButton();
        randomButton = new javax.swing.JRadioButton();
        playerNameTextField = new javax.swing.JTextField();
        playerNameLabel = new javax.swing.JLabel();
        generateCharButton = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dungeons and Dragons Helper");
        setLocation(new java.awt.Point(400, 0));
        setResizable(false);

        mainTabbedPane.setBackground(new java.awt.Color(131, 131, 131));

        combatOrderPanel.setEnabled(false);

        javax.swing.GroupLayout combatOrderPanelLayout = new javax.swing.GroupLayout(combatOrderPanel);
        combatOrderPanel.setLayout(combatOrderPanelLayout);
        combatOrderPanelLayout.setHorizontalGroup(
            combatOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        combatOrderPanelLayout.setVerticalGroup(
            combatOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab("Combat Order", combatOrderPanel);

        treasurePanel.setBackground(new java.awt.Color(131, 131, 131));

        chalRatingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0-4", "5-10", "11-16", "17+" }));
        chalRatingComboBox.setToolTipText("Choose challenge rating for rolls");
        chalRatingComboBox.setName(""); // NOI18N
        chalRatingComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chalRatingComboBoxMouseClicked(evt);
            }
        });
        chalRatingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chalRatingComboBoxActionPerformed(evt);
            }
        });

        chalRatingLabel.setBackground(new java.awt.Color(131, 131, 131));
        chalRatingLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chalRatingLabel.setText("Challenge Rating:");
        chalRatingLabel.setAlignmentY(0.0F);

        individualCoinageLabel.setBackground(new java.awt.Color(131, 131, 131));
        individualCoinageLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        individualCoinageLabel.setText("Individual Monster Coinage:");

        individualCopperTextField.setEditable(false);
        individualCopperTextField.setForeground(new java.awt.Color(201, 174, 93));
        individualCopperTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        individualCopperTextField.setToolTipText("Copper Pieces");

        hoardCoinageLabel.setBackground(new java.awt.Color(131, 131, 131));
        hoardCoinageLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hoardCoinageLabel.setText("Treasure Hoard Coinage: ");

        individualCopperLabal.setBackground(new java.awt.Color(131, 131, 131));
        individualCopperLabal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        individualCopperLabal.setForeground(new java.awt.Color(201, 174, 93));
        individualCopperLabal.setText("CP");

        individualSilverTextField.setEditable(false);
        individualSilverTextField.setForeground(new java.awt.Color(120, 120, 120));
        individualSilverTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        individualSilverTextField.setToolTipText("Silver Pieces");
        individualSilverTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        individualSilverLabel.setBackground(new java.awt.Color(131, 131, 131));
        individualSilverLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        individualSilverLabel.setForeground(new java.awt.Color(223, 223, 223));
        individualSilverLabel.setText("SP");

        individualGoldTextField.setEditable(false);
        individualGoldTextField.setForeground(new java.awt.Color(218, 165, 32));
        individualGoldTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        individualGoldTextField.setToolTipText("Gold Pieces");
        individualGoldTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        individualGoldLabel.setBackground(new java.awt.Color(131, 131, 131));
        individualGoldLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        individualGoldLabel.setForeground(new java.awt.Color(218, 165, 32));
        individualGoldLabel.setText("GP");

        individualPlatinumTextField.setEditable(false);
        individualPlatinumTextField.setForeground(new java.awt.Color(120, 120, 120));
        individualPlatinumTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        individualPlatinumTextField.setToolTipText("Platinum Pieces");
        individualPlatinumTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        indivivualPlatinumLabel.setBackground(new java.awt.Color(131, 131, 131));
        indivivualPlatinumLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        indivivualPlatinumLabel.setForeground(new java.awt.Color(229, 228, 226));
        indivivualPlatinumLabel.setText("PP");

        hoardCopperTextField.setEditable(false);
        hoardCopperTextField.setForeground(new java.awt.Color(201, 174, 93));
        hoardCopperTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        hoardCopperTextField.setToolTipText("Copper Pieces");
        hoardCopperTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        hoardCopperLabel.setBackground(new java.awt.Color(131, 131, 131));
        hoardCopperLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hoardCopperLabel.setForeground(new java.awt.Color(201, 174, 93));
        hoardCopperLabel.setText("CP");

        hoardSilverTextField.setEditable(false);
        hoardSilverTextField.setForeground(new java.awt.Color(120, 120, 120));
        hoardSilverTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        hoardSilverTextField.setToolTipText("Silver Pieces");
        hoardSilverTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        hoardSilverLabel.setBackground(new java.awt.Color(131, 131, 131));
        hoardSilverLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hoardSilverLabel.setForeground(new java.awt.Color(223, 223, 223));
        hoardSilverLabel.setText("SP");

        hoardGoldTextField.setEditable(false);
        hoardGoldTextField.setForeground(new java.awt.Color(218, 165, 32));
        hoardGoldTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        hoardGoldTextField.setToolTipText("Gold Pieces");
        hoardGoldTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        hoardGoldLabel.setBackground(new java.awt.Color(131, 131, 131));
        hoardGoldLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hoardGoldLabel.setForeground(new java.awt.Color(218, 165, 32));
        hoardGoldLabel.setText("GP");

        hoardPlatinumTextField.setEditable(false);
        hoardPlatinumTextField.setForeground(new java.awt.Color(120, 120, 120));
        hoardPlatinumTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        hoardPlatinumTextField.setToolTipText("Platinum Pieces");
        hoardPlatinumTextField.setMaximumSize(new java.awt.Dimension(6, 20));

        hoardPlatinumLabel.setBackground(new java.awt.Color(131, 131, 131));
        hoardPlatinumLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        hoardPlatinumLabel.setForeground(new java.awt.Color(229, 228, 226));
        hoardPlatinumLabel.setText("PP");

        individualCoinageRollButton.setText("Roll");
        individualCoinageRollButton.setToolTipText("Click to roll for coinage");
        individualCoinageRollButton.setMaximumSize(new java.awt.Dimension(77, 20));
        individualCoinageRollButton.setMinimumSize(new java.awt.Dimension(77, 20));
        individualCoinageRollButton.setPreferredSize(new java.awt.Dimension(77, 20));
        individualCoinageRollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                individualCoinageRollButtonActionPerformed(evt);
            }
        });

        hoardRollButton.setText("Roll");
        hoardRollButton.setToolTipText("Click to roll for coinage/treasure");
        hoardRollButton.setMaximumSize(new java.awt.Dimension(77, 20));
        hoardRollButton.setMinimumSize(new java.awt.Dimension(77, 20));
        hoardRollButton.setPreferredSize(new java.awt.Dimension(77, 20));
        hoardRollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoardRollButtonActionPerformed(evt);
            }
        });

        artTextArea.setEditable(false);
        artTextArea.setColumns(20);
        artTextArea.setFont(new java.awt.Font("Lucida Calligraphy", 1, 12)); // NOI18N
        artTextArea.setForeground(new java.awt.Color(15, 160, 100));
        artTextArea.setLineWrap(true);
        artTextArea.setRows(1);
        artTextArea.setMaximumSize(new java.awt.Dimension(164, 160));
        artTextArea.setMinimumSize(new java.awt.Dimension(164, 160));
        jScrollPane1.setViewportView(artTextArea);

        gemstonesTextArea.setColumns(20);
        gemstonesTextArea.setFont(new java.awt.Font("Lucida Calligraphy", 1, 12)); // NOI18N
        gemstonesTextArea.setForeground(new java.awt.Color(0, 100, 20));
        gemstonesTextArea.setLineWrap(true);
        gemstonesTextArea.setRows(1);
        gemstonesTextArea.setMaximumSize(new java.awt.Dimension(164, 160));
        gemstonesTextArea.setMinimumSize(new java.awt.Dimension(164, 160));
        jScrollPane2.setViewportView(gemstonesTextArea);

        magicItemsTextArea.setColumns(20);
        magicItemsTextArea.setFont(new java.awt.Font("Lucida Calligraphy", 1, 12)); // NOI18N
        magicItemsTextArea.setForeground(new java.awt.Color(150, 0, 200));
        magicItemsTextArea.setLineWrap(true);
        magicItemsTextArea.setRows(1);
        magicItemsTextArea.setMaximumSize(new java.awt.Dimension(164, 160));
        magicItemsTextArea.setMinimumSize(new java.awt.Dimension(164, 160));
        jScrollPane3.setViewportView(magicItemsTextArea);

        artLabel.setBackground(new java.awt.Color(131, 131, 131));
        artLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        artLabel.setText("Art Pieces:");

        gemstonesLabel.setBackground(new java.awt.Color(131, 131, 131));
        gemstonesLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gemstonesLabel.setText("Gemstones:");

        magicItemsLabel.setBackground(new java.awt.Color(131, 131, 131));
        magicItemsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        magicItemsLabel.setText("Magic Items:");

        treasureClearButton.setText("Clear");
        treasureClearButton.setPreferredSize(new java.awt.Dimension(57, 20));
        treasureClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treasureClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout treasurePanelLayout = new javax.swing.GroupLayout(treasurePanel);
        treasurePanel.setLayout(treasurePanelLayout);
        treasurePanelLayout.setHorizontalGroup(
            treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treasurePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(treasurePanelLayout.createSequentialGroup()
                        .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gemstonesLabel)
                            .addComponent(magicItemsLabel)
                            .addComponent(artLabel))
                        .addGap(24, 24, 24)
                        .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane1)))
                    .addGroup(treasurePanelLayout.createSequentialGroup()
                        .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(hoardCoinageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(individualCoinageLabel, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(chalRatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(treasurePanelLayout.createSequentialGroup()
                                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(individualCopperTextField)
                                    .addComponent(hoardCopperTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)
                                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(treasurePanelLayout.createSequentialGroup()
                                        .addComponent(hoardCopperLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hoardSilverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(hoardSilverLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hoardGoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(hoardGoldLabel))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, treasurePanelLayout.createSequentialGroup()
                                        .addComponent(individualCopperLabal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(individualSilverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(individualSilverLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(individualGoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(individualGoldLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(treasurePanelLayout.createSequentialGroup()
                                        .addComponent(individualPlatinumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(indivivualPlatinumLabel))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, treasurePanelLayout.createSequentialGroup()
                                        .addComponent(hoardPlatinumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hoardPlatinumLabel))))
                            .addComponent(chalRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(hoardRollButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(individualCoinageRollButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(treasureClearButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        treasurePanelLayout.setVerticalGroup(
            treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treasurePanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chalRatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chalRatingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(treasureClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(individualCoinageLabel)
                    .addComponent(individualCopperTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(individualCopperLabal)
                    .addComponent(individualSilverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(individualSilverLabel)
                    .addComponent(individualGoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(individualGoldLabel)
                    .addComponent(individualPlatinumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indivivualPlatinumLabel)
                    .addComponent(individualCoinageRollButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hoardCoinageLabel)
                    .addComponent(hoardCopperTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoardCopperLabel)
                    .addComponent(hoardSilverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoardSilverLabel)
                    .addComponent(hoardGoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoardGoldLabel)
                    .addComponent(hoardPlatinumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoardPlatinumLabel)
                    .addComponent(hoardRollButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(artLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gemstonesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(magicItemsLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Treasure", treasurePanel);

        rollsPanel.setBackground(new java.awt.Color(131, 131, 131));

        d4Button.setText("Roll d4");
        d4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d4ButtonActionPerformed(evt);
            }
        });

        d6Button.setText("Roll d6");
        d6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d6ButtonActionPerformed(evt);
            }
        });

        d8Button.setText("Roll d8");
        d8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d8ButtonActionPerformed(evt);
            }
        });

        d10Button.setText("Roll d10");
        d10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d10ButtonActionPerformed(evt);
            }
        });

        d12Button.setText("Roll d12");
        d12Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d12ButtonActionPerformed(evt);
            }
        });

        d20Button.setText("Roll d20");
        d20Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d20ButtonActionPerformed(evt);
            }
        });

        d100Button.setText("Roll d100");
        d100Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d100ButtonActionPerformed(evt);
            }
        });

        d4TextField.setEditable(false);
        d4TextField.setBackground(new java.awt.Color(255, 255, 255));
        d4TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d4TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        d6Textfield.setEditable(false);
        d6Textfield.setBackground(new java.awt.Color(255, 255, 255));
        d6Textfield.setMaximumSize(new java.awt.Dimension(24, 20));
        d6Textfield.setMinimumSize(new java.awt.Dimension(24, 20));

        d8TextField.setEditable(false);
        d8TextField.setBackground(new java.awt.Color(255, 255, 255));
        d8TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d8TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        d10TextField.setEditable(false);
        d10TextField.setBackground(new java.awt.Color(255, 255, 255));
        d10TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d10TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        d12TextField.setEditable(false);
        d12TextField.setBackground(new java.awt.Color(255, 255, 255));
        d12TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d12TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        d20TextField.setEditable(false);
        d20TextField.setBackground(new java.awt.Color(255, 255, 255));
        d20TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d20TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        d100TextField.setEditable(false);
        d100TextField.setBackground(new java.awt.Color(255, 255, 255));
        d100TextField.setMaximumSize(new java.awt.Dimension(24, 20));
        d100TextField.setMinimumSize(new java.awt.Dimension(24, 20));

        customInputField.setText("Your#Here");
        customInputField.setToolTipText("Type a number between 1 - 1000000000");
        customInputField.setMaximumSize(new java.awt.Dimension(24, 20));
        customInputField.setMinimumSize(new java.awt.Dimension(24, 20));
        customInputField.setName(""); // NOI18N

        customRollButton.setText("Custom Roll");
        customRollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customRollButtonActionPerformed(evt);
            }
        });

        customOutputField.setEditable(false);
        customOutputField.setBackground(new java.awt.Color(255, 255, 255));
        customOutputField.setToolTipText("");
        customOutputField.setMaximumSize(new java.awt.Dimension(24, 20));
        customOutputField.setMinimumSize(new java.awt.Dimension(24, 20));
        customOutputField.setName(""); // NOI18N

        rollsClearButton.setText("Clear");
        rollsClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollsClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rollsPanelLayout = new javax.swing.GroupLayout(rollsPanel);
        rollsPanel.setLayout(rollsPanelLayout);
        rollsPanelLayout.setHorizontalGroup(
            rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rollsPanelLayout.createSequentialGroup()
                .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rollsClearButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d100Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d20Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d12Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d10Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d8Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d6Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d4Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customRollButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(d4TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(d6Textfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(d8TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(d10TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(d12TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(d20TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(d100TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rollsPanelLayout.createSequentialGroup()
                        .addComponent(customInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customOutputField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 244, Short.MAX_VALUE))
        );
        rollsPanelLayout.setVerticalGroup(
            rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rollsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rollsPanelLayout.createSequentialGroup()
                        .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d4Button)
                            .addComponent(d4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d6Button)
                            .addComponent(d6Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d8Button)
                            .addComponent(d8TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d10Button)
                            .addComponent(d10TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d12Button)
                            .addComponent(d12TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d20Button))
                    .addComponent(d20TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d100Button)
                    .addComponent(d100TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rollsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customRollButton)
                    .addComponent(customOutputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rollsClearButton)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Rolls", rollsPanel);

        characterCreationPanel.setEnabled(false);

        characterNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        characterNameLabel.setText("Character Name:");

        raceButtonGroup.add(dwarfButton);
        dwarfButton.setSelected(true);
        dwarfButton.setText("Dwarf");
        dwarfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwarfButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(elfButton);
        elfButton.setText("Elf");
        elfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elfButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(halflingButton);
        halflingButton.setText("Halfling");
        halflingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halflingButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(humanButton);
        humanButton.setText("Human");
        humanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humanButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(dragonbornButton);
        dragonbornButton.setText("Dragonborn");
        dragonbornButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dragonbornButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(gnomeButton);
        gnomeButton.setText("Gnome");
        gnomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnomeButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(halfElfButton);
        halfElfButton.setText("Half-Elf");
        halfElfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfElfButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(halfOrcButton);
        halfOrcButton.setText("Half-Orc");
        halfOrcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfOrcButtonActionPerformed(evt);
            }
        });

        raceButtonGroup.add(tieflingButton);
        tieflingButton.setText("Tiefling");
        tieflingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tieflingButtonActionPerformed(evt);
            }
        });

        raceLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        raceLabel.setText("Pick race:");

        classButtonGroup.add(clericButton);
        clericButton.setText("Cleric");
        clericButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clericButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(bardButton);
        bardButton.setText("Bard");
        bardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bardButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(barbarianButton);
        barbarianButton.setSelected(true);
        barbarianButton.setText("Barbarian");
        barbarianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barbarianButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(monkButton);
        monkButton.setText("Monk");
        monkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monkButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(fighterButton);
        fighterButton.setText("Fighter");
        fighterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fighterButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(druidButton);
        druidButton.setText("Druid");
        druidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                druidButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(paladinButton);
        paladinButton.setText("Paladin");
        paladinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paladinButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(wizardButton);
        wizardButton.setText("Wizard");
        wizardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wizardButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(warlockButton);
        warlockButton.setText("Warlock");
        warlockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warlockButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(sorcererButton);
        sorcererButton.setText("Sorcerer");
        sorcererButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sorcererButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(rogueButton);
        rogueButton.setText("Rogue");
        rogueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rogueButtonActionPerformed(evt);
            }
        });

        classButtonGroup.add(rangerButton);
        rangerButton.setText("Ranger");
        rangerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rangerButtonActionPerformed(evt);
            }
        });

        classLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        classLabel.setText("Pick Class:");

        jSeparator1.setForeground(new java.awt.Color(140, 140, 140));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setForeground(new java.awt.Color(140, 140, 140));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setForeground(new java.awt.Color(140, 140, 140));

        jSeparator4.setForeground(new java.awt.Color(140, 140, 140));

        alignmentLabal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        alignmentLabal.setText("Pick Alignment:");

        alignmentButtonGroup.add(lawfulGoodButton);
        lawfulGoodButton.setSelected(true);
        lawfulGoodButton.setText("Lawful Good");
        lawfulGoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lawfulGoodButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(lawfulNeutralButton);
        lawfulNeutralButton.setText("Lawful Neutral");
        lawfulNeutralButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lawfulNeutralButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(lawfulEvilButton);
        lawfulEvilButton.setText("Lawful Evil");
        lawfulEvilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lawfulEvilButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(neutralGoodButton);
        neutralGoodButton.setText("Neutral Good");
        neutralGoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neutralGoodButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(neutralButton);
        neutralButton.setText("Neutral");
        neutralButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neutralButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(neutralEvilButton);
        neutralEvilButton.setText("Neutral Evil");
        neutralEvilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neutralEvilButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(chaoticGoodButton);
        chaoticGoodButton.setText("Chaotic Good");
        chaoticGoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chaoticGoodButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(chaoticNeutralButton);
        chaoticNeutralButton.setText("Chaotic Neutral");
        chaoticNeutralButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chaoticNeutralButtonActionPerformed(evt);
            }
        });

        alignmentButtonGroup.add(chaoticEvilButton);
        chaoticEvilButton.setText("Chaotic Evil");
        chaoticEvilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chaoticEvilButtonActionPerformed(evt);
            }
        });

        backgroundLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backgroundLabel.setText("Pick Background:");

        backgroundButtonGroup.add(acolyteButton);
        acolyteButton.setSelected(true);
        acolyteButton.setText("Acolyte");
        acolyteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acolyteButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(charlatanButton);
        charlatanButton.setText("Charlatan");
        charlatanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charlatanButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(criminalButton);
        criminalButton.setText("Ciminal");
        criminalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criminalButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(entertainerButton);
        entertainerButton.setText("Entertainer");
        entertainerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entertainerButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(folkHeroButton);
        folkHeroButton.setText("Folk Hero");
        folkHeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folkHeroButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(guildArtisanButton);
        guildArtisanButton.setText("Guild Artisan");
        guildArtisanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guildArtisanButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(hermitButton);
        hermitButton.setText("Hermit");
        hermitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hermitButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(nobleButton);
        nobleButton.setText("Noble");
        nobleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nobleButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(outlanderButton);
        outlanderButton.setText("Outlander");
        outlanderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outlanderButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(sageButton);
        sageButton.setText("Sage");
        sageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sageButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(sailorButton);
        sailorButton.setText("Sailor");
        sailorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sailorButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(soldierButton);
        soldierButton.setText("Soldier");
        soldierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldierButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(urchinButton);
        urchinButton.setText("Urchin");
        urchinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urchinButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(randomButton);
        randomButton.setText("Random");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        playerNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        playerNameLabel.setText("Player Name:");

        generateCharButton.setText("Generate");
        generateCharButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateCharButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout characterCreationPanelLayout = new javax.swing.GroupLayout(characterCreationPanel);
        characterCreationPanel.setLayout(characterCreationPanelLayout);
        characterCreationPanelLayout.setHorizontalGroup(
            characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addComponent(characterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(characterNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(generateCharButton, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(raceLabel)
                                    .addComponent(halfElfButton)
                                    .addComponent(tieflingButton)
                                    .addComponent(halfOrcButton)
                                    .addComponent(gnomeButton)
                                    .addComponent(dragonbornButton)
                                    .addComponent(humanButton)
                                    .addComponent(halflingButton)
                                    .addComponent(elfButton)
                                    .addComponent(dwarfButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alignmentLabal)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fighterButton)
                                    .addComponent(monkButton)
                                    .addComponent(druidButton)
                                    .addComponent(clericButton)
                                    .addComponent(bardButton)
                                    .addComponent(barbarianButton)
                                    .addComponent(classLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(warlockButton)
                                    .addComponent(wizardButton)
                                    .addComponent(sorcererButton)
                                    .addComponent(rogueButton)
                                    .addComponent(rangerButton)
                                    .addComponent(paladinButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(backgroundLabel)
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(guildArtisanButton)
                                            .addComponent(hermitButton)
                                            .addComponent(acolyteButton)
                                            .addComponent(charlatanButton)
                                            .addComponent(criminalButton)
                                            .addComponent(entertainerButton)
                                            .addComponent(folkHeroButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(randomButton)
                                            .addComponent(nobleButton)
                                            .addComponent(outlanderButton)
                                            .addComponent(sageButton)
                                            .addComponent(sailorButton)
                                            .addComponent(soldierButton)
                                            .addComponent(urchinButton)))))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lawfulNeutralButton)
                                            .addComponent(lawfulGoodButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(neutralGoodButton)
                                            .addComponent(neutralButton)))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addComponent(lawfulEvilButton)
                                        .addGap(20, 20, 20)
                                        .addComponent(neutralEvilButton)))
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chaoticNeutralButton)
                                    .addComponent(chaoticEvilButton)
                                    .addComponent(chaoticGoodButton))))
                        .addGap(9, 9, 9))))
        );
        characterCreationPanelLayout.setVerticalGroup(
            characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(characterNameLabel)
                    .addComponent(characterNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerNameLabel)
                    .addComponent(playerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addComponent(backgroundLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(acolyteButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(charlatanButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(criminalButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(entertainerButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(folkHeroButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(guildArtisanButton)
                                                    .addComponent(urchinButton)))
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(nobleButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(outlanderButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sageButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sailorButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(soldierButton)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(randomButton)
                                            .addComponent(hermitButton)))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addComponent(classLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(barbarianButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bardButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(clericButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(druidButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(fighterButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(monkButton))
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(paladinButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rangerButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rogueButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sorcererButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(warlockButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(wizardButton)))))
                                .addGap(0, 0, 0)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(alignmentLabal)
                                .addGap(6, 6, 6)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lawfulGoodButton)
                                    .addComponent(neutralGoodButton)
                                    .addComponent(chaoticGoodButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lawfulNeutralButton)
                                    .addComponent(neutralButton)
                                    .addComponent(chaoticNeutralButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lawfulEvilButton)
                                    .addComponent(neutralEvilButton)
                                    .addComponent(chaoticEvilButton)))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(raceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dwarfButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elfButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(halflingButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(humanButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dragonbornButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gnomeButton)
                                .addGap(0, 0, 0)
                                .addComponent(halfElfButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(halfOrcButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tieflingButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(generateCharButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        mainTabbedPane.addTab("Character Creation", characterCreationPanel);

        fileMenu.setText("File");
        jMenuBar.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar.add(editMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void d10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d10ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d10")
            d10TextField.setText(""+roll.d10());
    }//GEN-LAST:event_d10ButtonActionPerformed
    private void hoardRollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoardRollButtonActionPerformed
        reset();
        t=new Treasure();
        if(evt.getActionCommand()=="Roll"){
            if(c.getChallengeRating()==0){
                hoard = t.TreasureHoardZeroToFour();
                sortLoot();
            }
            if(c.getChallengeRating()==1){
                hoard=t.TreasureHoardFiveToTen();
                sortLoot();
            }
            if(c.getChallengeRating()==2){
                hoard = t.TreasureHoardElevenToSixteen();
                sortLoot();
            }
            if(c.getChallengeRating()==3){
                hoard = t.TreasureHoardSeventeenPlus();
                sortLoot();
            }
        }
    }//GEN-LAST:event_hoardRollButtonActionPerformed
    private void individualCoinageRollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_individualCoinageRollButtonActionPerformed
        reset();
        t=new Treasure();
        if(evt.getActionCommand()=="Roll"){
            if(c.getChallengeRating()==0){
                coinage = t.TreasureZeroToFour();
                individualCoin();
            }
            if(c.getChallengeRating()==1){
                coinage=t.TreasureFiveToTen();
                individualCoin();
            }
            if(c.getChallengeRating()==2){
                coinage = t.TreasureElevenToSixteen();
                individualCoin();
            }
            if(c.getChallengeRating()==3){
                coinage = t.TreasureSeventeenPlus();
                individualCoin();
            }
        }
    }//GEN-LAST:event_individualCoinageRollButtonActionPerformed
    private void chalRatingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chalRatingComboBoxActionPerformed
        c = new ChallengeRating();
        if(chalRatingComboBox.getSelectedItem() == "0-4"){
            c.ChallengeRatingZeroToFour();
        }
        if(chalRatingComboBox.getSelectedItem() == "5-10"){
            c.ChallengeRatingFiveToTen();
        }
        if(chalRatingComboBox.getSelectedItem() == "11-16"){
            c.ChallengeRatingElevenToSixteen();
        }
        if(chalRatingComboBox.getSelectedItem() == "17+"){
            c.ChallengeRatingSeventeenPlus();
        }
    }//GEN-LAST:event_chalRatingComboBoxActionPerformed
    private void chalRatingComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chalRatingComboBoxMouseClicked

    }//GEN-LAST:event_chalRatingComboBoxMouseClicked
    private void d4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d4ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d4")
            d4TextField.setText(""+roll.d4());
    }//GEN-LAST:event_d4ButtonActionPerformed
    private void d6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d6ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d6")
            d6Textfield.setText(""+roll.d6());
    }//GEN-LAST:event_d6ButtonActionPerformed
    private void d8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d8ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d8")
            d8TextField.setText(""+roll.d8());
    }//GEN-LAST:event_d8ButtonActionPerformed
    private void d12ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d12ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d12")
            d12TextField.setText(""+roll.d12());
    }//GEN-LAST:event_d12ButtonActionPerformed
    private void d20ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d20ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d20")
            d20TextField.setText(""+roll.d20());
    }//GEN-LAST:event_d20ButtonActionPerformed
    private void d100ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d100ButtonActionPerformed
        reset();
        customReset();
        if(evt.getActionCommand()=="Roll d100")
            d100TextField.setText(""+roll.d100());
    }//GEN-LAST:event_d100ButtonActionPerformed
    private void customRollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customRollButtonActionPerformed
        reset();
        int customRoll=1;
        String stringRoll=null;
        stringRoll = customInputField.getText();
        
        try{
            customRoll=Integer.parseInt(stringRoll);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Must be a number between 1- 1,0"
                    + "00,000,000");
            customRoll=1;
            customInputField.setText("1");
        }
        
        if(customRoll<=1000000000&&customRoll>=1){
            customRoll=roll.CustomRoll(customRoll);
            customOutputField.setText(""+customRoll);
        }
        else{
            JOptionPane.showMessageDialog(null,"Number must be between 1 - 1,00"
                    + "0,000,000");
            reset();
        }
    }//GEN-LAST:event_customRollButtonActionPerformed
    private void treasureClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treasureClearButtonActionPerformed
        if(evt.getActionCommand()=="Clear"){
            reset();
        }
    }//GEN-LAST:event_treasureClearButtonActionPerformed
    private void rollsClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollsClearButtonActionPerformed
        if(evt.getActionCommand()=="Clear"){
            reset();
            customReset();
        }
    }//GEN-LAST:event_rollsClearButtonActionPerformed
    public void generateCharButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateCharButtonActionPerformed
        String cName=characterNameTextField.getText();
        String pName=playerNameTextField.getText();
        if(evt.getActionCommand()=="Generate"){  
            if(cName.equals("")||pName.equals("")){
                JOptionPane.showMessageDialog(null,"Must enter a character and "
                        + "player name.");
            }
            else{
                Character character = new Character();
                character.Character();
                character.setAlignment(align);
                
                if(race=="Dwarf"){
                    character.dwarfRace();
                }
                if(race=="Elf"){
                    character.elfRace();
                }
                if(race=="Halfling"){
                    character.halflingRace();
                }
                if(race=="Human"){
                    character.humanRace();
                }
                if(race=="Dragonborn"){
                    character.dragonbornRace();
                }
                if(race=="Gnome"){
                    character.gnomeRace();
                }
                if(race=="Half-Elf"){
                    character.halfElfRace();
                }
                if(race=="Half-Orc"){
                    character.halfOrcRace();
                }
                if(race=="Tiefling"){
                    character.tieflingRace();
                }
                //class
                if(charClass=="Barbarian"){
                    character.barbarianClass();
                }
                if(charClass=="Bard"){
                    character.bardClass();
                }
                if(charClass=="Cleric"){
                    character.clericClass();
                }
                if(charClass=="Druid"){
                    character.druidClass();
                }
                if(charClass=="Fighter"){
                    character.fighterClass();
                }
                if(charClass=="Monk"){
                    character.monkClass();
                }
                if(charClass=="Paladin"){
                    character.paladinClass();
                }
                if(charClass=="Ranger"){
                    character.rangerClass();
                }
                if(charClass=="Rogue"){
                    character.rogueClass();
                }
                if(charClass=="Sorcerer"){
                    character.sorcererClass();
                }
                if(charClass=="Warlock"){
                    character.warlockClass();
                }
                if(charClass=="Wizard"){
                    character.wizardClass();
                }
                if(background =="Acolyte"){
                    character.acolyteBack();
                }
                if(background =="Charlatan"){
                    character.charlatanBack();
                }
                if(background =="Criminal"){
                    character.criminalBack();
                }
                if(background =="Entertainer"){
                    character.entertainerBack();
                }
                if(background =="Folk Hero"){
                    character.folkHeroBack();
                }
                if(background =="Guild Artisan"){
                    character.guildArtisanBack();
                }
                if(background =="Hermit"){
                    character.hermitBack();
                }
                if(background =="Noble"){
                    character.nobleBack();
                }
                if(background =="Outlander"){
                    character.outlanderBack();
                }
                if(background =="Sage"){
                    character.sageBack();
                }
                if(background =="Sailor"){
                    character.sailorBack();
                }
                if(background =="Soldier"){
                    character.soldierBack();
                }
                if(background =="Urchin"){
                    character.urchinBack();
                }
                if(background =="Random"){
                    character.randomBack();
                }
                character.setCharName(characterNameTextField.getText());
                character.setPlayerName(playerNameTextField.getText());

                for(int i=0;i<character.charInfo.length;i++)
                    System.out.println(character.charInfo[i]);
            }
        }
    }//GEN-LAST:event_generateCharButtonActionPerformed

    public void elfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elfButtonActionPerformed
       race = evt.getActionCommand();
    }//GEN-LAST:event_elfButtonActionPerformed
    public void halflingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halflingButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_halflingButtonActionPerformed
    public void humanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humanButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_humanButtonActionPerformed
    public void dragonbornButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dragonbornButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_dragonbornButtonActionPerformed
    public void gnomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnomeButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_gnomeButtonActionPerformed
    public void halfElfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfElfButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_halfElfButtonActionPerformed
    public void halfOrcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfOrcButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_halfOrcButtonActionPerformed
    public void tieflingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tieflingButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_tieflingButtonActionPerformed
    public void dwarfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwarfButtonActionPerformed
        race = evt.getActionCommand();
    }//GEN-LAST:event_dwarfButtonActionPerformed

    private void barbarianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barbarianButtonActionPerformed
        charClass = evt.getActionCommand();
    }//GEN-LAST:event_barbarianButtonActionPerformed
    private void bardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bardButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_bardButtonActionPerformed
    private void clericButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clericButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_clericButtonActionPerformed
    private void druidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_druidButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_druidButtonActionPerformed
    private void fighterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fighterButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_fighterButtonActionPerformed
    private void monkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monkButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_monkButtonActionPerformed
    private void paladinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paladinButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_paladinButtonActionPerformed
    private void rangerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rangerButtonActionPerformed
        charClass = evt.getActionCommand();
    }//GEN-LAST:event_rangerButtonActionPerformed
    private void rogueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rogueButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_rogueButtonActionPerformed
    private void sorcererButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sorcererButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_sorcererButtonActionPerformed
    private void warlockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warlockButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_warlockButtonActionPerformed
    private void wizardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wizardButtonActionPerformed
        charClass=evt.getActionCommand();
    }//GEN-LAST:event_wizardButtonActionPerformed

    public void lawfulGoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lawfulGoodButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_lawfulGoodButtonActionPerformed
    public void lawfulNeutralButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lawfulNeutralButtonActionPerformed
        align=evt.getActionCommand();
        System.out.println(align);
    }//GEN-LAST:event_lawfulNeutralButtonActionPerformed
    public void lawfulEvilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lawfulEvilButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_lawfulEvilButtonActionPerformed
    public void neutralGoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neutralGoodButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_neutralGoodButtonActionPerformed
    public void neutralButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neutralButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_neutralButtonActionPerformed
    public void neutralEvilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neutralEvilButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_neutralEvilButtonActionPerformed
    public void chaoticGoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chaoticGoodButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_chaoticGoodButtonActionPerformed
    public void chaoticNeutralButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chaoticNeutralButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_chaoticNeutralButtonActionPerformed
    public void chaoticEvilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chaoticEvilButtonActionPerformed
        align=evt.getActionCommand();
    }//GEN-LAST:event_chaoticEvilButtonActionPerformed

    private void acolyteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acolyteButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_acolyteButtonActionPerformed
    private void charlatanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charlatanButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_charlatanButtonActionPerformed
    private void criminalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criminalButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_criminalButtonActionPerformed
    private void entertainerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entertainerButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_entertainerButtonActionPerformed
    private void folkHeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folkHeroButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_folkHeroButtonActionPerformed
    private void guildArtisanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guildArtisanButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_guildArtisanButtonActionPerformed
    private void hermitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hermitButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_hermitButtonActionPerformed
    private void nobleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nobleButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_nobleButtonActionPerformed
    private void outlanderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outlanderButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_outlanderButtonActionPerformed
    private void sageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sageButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_sageButtonActionPerformed
    private void sailorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sailorButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_sailorButtonActionPerformed
    private void soldierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldierButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_soldierButtonActionPerformed
    private void urchinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urchinButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_urchinButtonActionPerformed
    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        background = evt.getActionCommand();
    }//GEN-LAST:event_randomButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JRadioButton acolyteButton;
    public javax.swing.ButtonGroup alignmentButtonGroup;
    private javax.swing.JLabel alignmentLabal;
    private javax.swing.JLabel artLabel;
    private javax.swing.JTextArea artTextArea;
    public javax.swing.ButtonGroup backgroundButtonGroup;
    private javax.swing.JLabel backgroundLabel;
    public javax.swing.JRadioButton barbarianButton;
    public javax.swing.JRadioButton bardButton;
    private javax.swing.JComboBox<String> chalRatingComboBox;
    private javax.swing.JLabel chalRatingLabel;
    public javax.swing.JRadioButton chaoticEvilButton;
    public javax.swing.JRadioButton chaoticGoodButton;
    public javax.swing.JRadioButton chaoticNeutralButton;
    private javax.swing.JPanel characterCreationPanel;
    private javax.swing.JLabel characterNameLabel;
    public javax.swing.JTextField characterNameTextField;
    public javax.swing.JRadioButton charlatanButton;
    public javax.swing.ButtonGroup classButtonGroup;
    private javax.swing.JLabel classLabel;
    public javax.swing.JRadioButton clericButton;
    private javax.swing.JPanel combatOrderPanel;
    public javax.swing.JRadioButton criminalButton;
    private javax.swing.JTextField customInputField;
    private javax.swing.JTextField customOutputField;
    private javax.swing.JButton customRollButton;
    private javax.swing.JButton d100Button;
    private javax.swing.JTextField d100TextField;
    private javax.swing.JButton d10Button;
    private javax.swing.JTextField d10TextField;
    private javax.swing.JButton d12Button;
    private javax.swing.JTextField d12TextField;
    private javax.swing.JButton d20Button;
    private javax.swing.JTextField d20TextField;
    private javax.swing.JButton d4Button;
    private javax.swing.JTextField d4TextField;
    private javax.swing.JButton d6Button;
    private javax.swing.JTextField d6Textfield;
    private javax.swing.JButton d8Button;
    private javax.swing.JTextField d8TextField;
    public javax.swing.JRadioButton dragonbornButton;
    public javax.swing.JRadioButton druidButton;
    public javax.swing.JRadioButton dwarfButton;
    private javax.swing.JMenu editMenu;
    public javax.swing.JRadioButton elfButton;
    public javax.swing.JRadioButton entertainerButton;
    public javax.swing.JRadioButton fighterButton;
    private javax.swing.JMenu fileMenu;
    public javax.swing.JRadioButton folkHeroButton;
    private javax.swing.JLabel gemstonesLabel;
    private javax.swing.JTextArea gemstonesTextArea;
    private javax.swing.JButton generateCharButton;
    public javax.swing.JRadioButton gnomeButton;
    public javax.swing.JRadioButton guildArtisanButton;
    public javax.swing.JRadioButton halfElfButton;
    public javax.swing.JRadioButton halfOrcButton;
    public javax.swing.JRadioButton halflingButton;
    public javax.swing.JRadioButton hermitButton;
    private javax.swing.JLabel hoardCoinageLabel;
    private javax.swing.JLabel hoardCopperLabel;
    private javax.swing.JTextField hoardCopperTextField;
    private javax.swing.JLabel hoardGoldLabel;
    private javax.swing.JTextField hoardGoldTextField;
    private javax.swing.JLabel hoardPlatinumLabel;
    private javax.swing.JTextField hoardPlatinumTextField;
    private javax.swing.JButton hoardRollButton;
    private javax.swing.JLabel hoardSilverLabel;
    private javax.swing.JTextField hoardSilverTextField;
    public javax.swing.JRadioButton humanButton;
    private javax.swing.JLabel individualCoinageLabel;
    private javax.swing.JButton individualCoinageRollButton;
    private javax.swing.JLabel individualCopperLabal;
    private javax.swing.JTextField individualCopperTextField;
    private javax.swing.JLabel individualGoldLabel;
    private javax.swing.JTextField individualGoldTextField;
    private javax.swing.JTextField individualPlatinumTextField;
    private javax.swing.JLabel individualSilverLabel;
    private javax.swing.JTextField individualSilverTextField;
    private javax.swing.JLabel indivivualPlatinumLabel;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    public javax.swing.JRadioButton lawfulEvilButton;
    public javax.swing.JRadioButton lawfulGoodButton;
    public javax.swing.JRadioButton lawfulNeutralButton;
    private javax.swing.JLabel magicItemsLabel;
    private javax.swing.JTextArea magicItemsTextArea;
    private javax.swing.JTabbedPane mainTabbedPane;
    public javax.swing.JRadioButton monkButton;
    public javax.swing.JRadioButton neutralButton;
    public javax.swing.JRadioButton neutralEvilButton;
    public javax.swing.JRadioButton neutralGoodButton;
    public javax.swing.JRadioButton nobleButton;
    public javax.swing.JRadioButton outlanderButton;
    public javax.swing.JRadioButton paladinButton;
    private javax.swing.JLabel playerNameLabel;
    public javax.swing.JTextField playerNameTextField;
    public javax.swing.ButtonGroup raceButtonGroup;
    private javax.swing.JLabel raceLabel;
    public javax.swing.JRadioButton randomButton;
    public javax.swing.JRadioButton rangerButton;
    public javax.swing.JRadioButton rogueButton;
    private javax.swing.JButton rollsClearButton;
    private javax.swing.JPanel rollsPanel;
    public javax.swing.JRadioButton sageButton;
    public javax.swing.JRadioButton sailorButton;
    public javax.swing.JRadioButton soldierButton;
    public javax.swing.JRadioButton sorcererButton;
    public javax.swing.JRadioButton tieflingButton;
    private javax.swing.JButton treasureClearButton;
    private javax.swing.JPanel treasurePanel;
    public javax.swing.JRadioButton urchinButton;
    public javax.swing.JRadioButton warlockButton;
    public javax.swing.JRadioButton wizardButton;
    // End of variables declaration//GEN-END:variables
    
    public void sortLoot(){
                artTextArea.setText("");
                gemstonesTextArea.setText("");
                magicItemsTextArea.setText("");
                hoardCopperTextField.setText(hoard[0]);
                hoardSilverTextField.setText(hoard[1]);
                hoardGoldTextField.setText(hoard[2]);
                hoardPlatinumTextField.setText(hoard[3]);
                
                if(t.getArt()>0){
                    gemstonesTextArea.setText("No Gems");
                    for(int i=4;i<hoard.length-t.getMagic();i++){
                        artTextArea.append(hoard[i]+"\n");
                    }
                    for(int i=hoard.length-t.getMagic();i<hoard.length;i++){
                        magicItemsTextArea.append(hoard[i]+"\n");
                    }
                }
                else{
                    artTextArea.setText("No Art pieces");
                    for(int i=4;i<hoard.length-t.getMagic();i++){
                        gemstonesTextArea.append(hoard[i]+"\n");
                    }
                    for(int i=hoard.length-t.getMagic();i<hoard.length;i++){
                        magicItemsTextArea.append(hoard[i]+"\n");
                    }
                }
                if(t.getMagic()==0){
                    magicItemsTextArea.setText("No Magic Items");
                }
                if(t.getGems()==0){
                    gemstonesTextArea.setText("No Gems");
                }
                artTextArea.setCaretPosition(0);
                gemstonesTextArea.setCaretPosition(0);
                magicItemsTextArea.setCaretPosition(0);
    }
    public void individualCoin(){
        individualCopperTextField.setText(""+coinage[0]);
        individualSilverTextField.setText(""+coinage[1]);
        individualGoldTextField.setText(""+coinage[2]);
        individualPlatinumTextField.setText(""+coinage[3]);
    }
    public void reset(){
        individualCopperTextField.setText("");
        individualSilverTextField.setText("");
        individualGoldTextField.setText("");
        individualPlatinumTextField.setText("");
        hoardCopperTextField.setText("");
        hoardSilverTextField.setText("");
        hoardGoldTextField.setText("");
        hoardPlatinumTextField.setText("");
        customOutputField.setText("");
        artTextArea.setText("");
        gemstonesTextArea.setText("");
        magicItemsTextArea.setText("");
        d4TextField.setText("");
        d6Textfield.setText("");
        d8TextField.setText("");
        d10TextField.setText("");
        d12TextField.setText("");
        d20TextField.setText("");
        d100TextField.setText(""); 
    }
    public void customReset(){
        customInputField.setText("Your#Here");
    }
}